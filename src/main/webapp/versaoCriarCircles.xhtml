<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/templates/Layout.xhtml"
                xmlns:e="http://edernilson.com/componentes/ui">

    <ui:define name="content">
        <h:head>
        </h:head>
        <h:body>
            <h1>Criação de Círculos</h1>
            <h:form>
                <e:leaflet center="36.880257,30.687417" zoom="12" type="ROADMAP"  
                           style="width:100%;height:400px"
                           model="#{circlesView.circleModel}"/>
            </h:form>
            
            <br/>

            <p:tabView>
                <p:tab title="versaoCriarCircles.xhtml">
                    <pre>
&lt;h:body&gt;
    &lt;h1&gt;Criação de Círculos&lt;/h1&gt;
    &lt;h:form&gt;
        &lt;e:leaflet center="36.880257,30.687417" zoom="12" type="ROADMAP" 
                   style="width:100%;height:400px"
                   model="\#{circlesView.circleModel}"/&gt;
    &lt;/h:form&gt;
&lt;/h:body&gt; 
                    </pre>
                </p:tab>
                <p:tab title="CirclesView">
                    <pre>
@ManagedBean
public class CirclesView implements Serializable {
  
    private MapModel circleModel;
      
    @PostConstruct
    public void init() {
         
        circleModel = new DefaultMapModel();
  
        LatLng coord1 = new LatLng(36.879466, 30.667648);
        LatLng coord4 = new LatLng(36.885233, 30.702323);
 
        //Circle
        Circle circle1 = new Circle(coord1, 500);
        circle1.setStrokeColor("#d93c3c");
        circle1.setFillColor("#d93c3c");
        circle1.setFillOpacity(0.5);
 
        Circle circle2 = new Circle(coord4, 300);
        circle2.setStrokeColor("#00ff00");
        circle2.setFillColor("#00ff00");
        circle2.setStrokeOpacity(0.7);
        circle2.setFillOpacity(0.7);
 
        circleModel.addOverlay(circle1);
        circleModel.addOverlay(circle2);
    }
  
    public MapModel getCircleModel() {
        return circleModel;
    }

}
                    </pre>                    
                </p:tab>
            </p:tabView>
            <br/>
        </h:body>
    </ui:define>

</ui:composition>